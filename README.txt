# Arousal-Valence Annotation Tool

## Project Overview
This is a Python-based GUI application for annotating emotions on a two-dimensional arousal-valence plane. Users can plot points representing emotional states, adjust emotion labels (in Japanese), and save data to CSV files. The tool uses Tkinter for the interface and Matplotlib for interactive plotting, designed for researchers studying emotional responses.

## Features
- Interactive plotting of arousal (y-axis) and valence (x-axis) points within a circular plane.
- Draggable Japanese emotion labels (e.g., "目覚めた ●", "喜び ●") with reference lines from origin.
- Adjustable sliders for stimulus valence and intensity (-1 to 1).
- Emotion type selection (Anger, Disgust, Fear, Joy, Sadness, Surprise).
- Username input for session tracking.
- Save/load label layouts to/from `layout.csv`.
- Save point data (time, arousal, valence, etc.) to `emotion_data.csv`.
- UTF-8 encoding for Japanese text support.
- Cross-platform compatibility (tested on Windows).

## Requirements
- Python 3.12.7 (or compatible 3.9+).
- Libraries: `tkinter` (included in standard Python), `matplotlib` (`pip install matplotlib`).
- Japanese font: Meiryo (default on Windows) or alternatives like Noto Sans JP.
- Operating System: Tested on Windows; Linux/Mac may require font installation.
- Optional: Anaconda environment for dependency management.
- Git (optional, for version control).

## Installation
1. Clone or download the project to a local directory (e.g., `c:\Users\Jsyzc\Desktop\emotion circle record\`).
2. Ensure Python 3.12.7 is installed. For Anaconda:
   ```
   conda create -n emotion_tool python=3.12.7
   conda activate emotion_tool
   ```
3. Install Matplotlib:
   ```
   pip install matplotlib
   ```
4. Verify Japanese font availability (Meiryo on Windows; for Linux/Mac, install Noto Sans JP via package manager, e.g., `sudo apt install fonts-noto-cjk`).
5. Navigate to the project directory:
   ```
   cd c:\Users\Jsyzc\Desktop\emotion circle record
   ```
6. (Optional) Initialize a Git repository:
   ```
   git init
   git add .
   git commit -m "Initial commit"
   ```

## Usage
1. Run the application:
   ```
   python main.py
   ```
2. Interact with the GUI:
   - **Left-click** on the plot to add points (red for first, green for others; time increments by 30s).
   - **Right-click** and drag to move Japanese labels; release to save position.
   - Adjust **sliders** for stimulus valence/intensity.
   - Select **emotion type** from the dropdown.
   - Enter **username** for session ID.
   - Click **Save & Clear** to save points to `emotion_data.csv` and clear the plot.
   - Click **Save Layout** to save label positions to `layout.csv`.
3. On startup, the app loads `layout.csv` if present, applying saved label positions.
4. Output files (`emotion_data.csv`, `layout.csv`) are saved in the project directory, encoded in UTF-8, and ignored by Git via `.gitignore`.

## File Structure
- `config.py`: Defines constants (e.g., Japanese labels, font, file paths).
- `plot_utils.py`: Handles Matplotlib figure initialization and label/line drawing.
- `data_utils.py`: Manages CSV saving/loading for layouts and records.
- `event_handlers.py`: Defines mouse event handlers (click, release, motion).
- `arousal_valence_recorder.py`: Main class integrating UI and logic.
- `main.py`: Entry point to launch the Tkinter app.
- `.gitignore`: Specifies files/directories to exclude from Git tracking (e.g., `layout.csv`, `__pycache__`).
- `LICENSE.txt`: Contains the MIT License for the project.
- `README.txt`: Project documentation (this file).
- `layout.csv`: Stores label positions (generated by "Save Layout", ignored by Git).
- `emotion_data.csv`: Stores point data (generated by "Save & Clear", ignored by Git).

## Troubleshooting
- **Labels not in Japanese**: Ensure Meiryo or a Japanese font is installed. Update `config.py` to include fallbacks:
  ```
  matplotlib.rcParams['font.family'] = ['Meiryo', 'Noto Sans JP', 'sans-serif']
  ```
- **Layout not loading**: Check `layout.csv` exists and has correct format (`text,x,y`). Console logs (e.g., `Debug: Updated '目覚めた ●' to position (x, y)`) indicate success. If missing, create a sample:
  ```
  text,x,y
  目覚めた ●,0.0,0.5
  ● 驚いた,0.2,0.6
  ```
- **Module import errors**: Clear Python cache:
  ```
  del c:\Users\Jsyzc\Desktop\emotion circle record\__pycache__\*.pyc
  ```
  Verify all files are in the project directory with correct names (case-sensitive).
- **Git tracking unwanted files**: Ensure `.gitignore` is in the root directory and lists `layout.csv`, `emotion_data.csv`, `__pycache__/`, etc. Remove tracked files:
  ```
  git rm --cached layout.csv
  git rm --cached emotion_data.csv
  ```
- **GUI not updating**: Ensure `canvas.draw()` is called; add `canvas.flush_events()` in `load_layout` if needed.
- **Dependencies**: Confirm `matplotlib` version (`pip show matplotlib`); update if issues occur (`pip install --upgrade matplotlib`).

## License
This project is licensed under the MIT License. See `LICENSE.txt` for details.

## Contact
For issues or enhancements, contact the project maintainer or open an issue if hosted on a repository.